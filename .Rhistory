Fichero <- read.csv("/home/federico/Personal/profesor/AGAEVE/COURSERA/Exploratory_Data_Analysis/Project_1/household_power_consumption.txt", sep=";", header = TRUE, na.strings="?", col.names=c("Fecha","Hora","Pot_Activa","Pot_Reactiva","Tension","Intensidad","Medida_1","Medida_2","Medida_3"))
Fichero_1 <- Fichero
Fichero_1[,"Fecha"] <- as.Date(as.character(Fichero_1[,"Fecha"]), format="%d/%m/%Y")
Fichero_2 <- subset(Fichero_1, Fichero_1$Fecha<="2007-02-03" & Fichero_1$Fecha>="2007-02-01")
?cmin
?cmin()
help(cmin)
??cmin
summary(Fichero_2)
plot(Fichero_2$Pot_Activa, ylim=c(0,8))
plot(Fichero_2$Pot_Activa, ylim=c(0,8), typ="l")
help(axis)
axis(1,at=Fichero_2$Fecha)
plot(Fichero_2$Pot_Activa, ylim=c(0,8), typ="l", axes="F")
axis(1,at=Fichero_2$Fecha)
axis(1,at=Fichero_2$Fecha, labels = "F")
axis(1,at=Fichero_2$Fecha, labels = Fichero_2$Fecha)
axis(1,at=Fichero_2$Fecha, labels = Fichero_2$Fecha, lwd="1")
plot(Fichero_2$Pot_Activa, ylim=c(0,8), typ="l", axes="F")
axis(2)
axis(1,at=as.character(Fichero_2$Fecha, format="%a"), labels = Fichero_2$Fecha, lwd="1")
axis(1,at=as.character(Fichero_2$Fecha, format="%a"), lwd="1")
plot(Fichero_2$Pot_Activa, ylim=c(0,8), pch="l", axes="F")
plot(Fichero_2$Pot_Activa, ylim=c(0,8), typ="l", axes="F")
plot(Fichero_2$Pot_Activa, ylim=c(0,8), typ="l", axes="F", xlab=Fichero_2$Fecha)
plot(Fichero_2$Pot_Activa ~ Fichero_2$Fecha, ylim=c(0,8), typ="l", axes="F")
plot(Fichero_2$Pot_Activa ~ Fichero_2$Fecha, ylim=c(0,8), typ="l")
plot(Fichero_2$Pot_Activa, ylim=c(0,8), typ="l")
plot(Fichero_2$Pot_Activa, ylim=c(0,8), typ="l", axes ="F")
axis(2)
axis(2, at=c(0,10))
axis(2, at=c(0,10),labels=c(0,2,3,5,6) )
axis(2, at=c(0,10),labels=c(5,6) )
axis(2, at=c(0,10),labels=c(5,6) )
plot(Fichero_2$Pot_Activa, ylim=c(0,8), typ="l", axes ="F")
axis(2)
Fichero <- read.csv("/home/federico/Personal/profesor/AGAEVE/COURSERA/Exploratory_Data_Analysis/Project_1/household_power_consumption.txt", sep=";", header = TRUE, na.strings="?", col.names=c("Fecha","Hora","Pot_Activa","Pot_Reactiva","Tension","Intensidad","Medida_1","Medida_2","Medida_3"))
Fichero_1 <- Fichero
Fichero_1[,"Fecha"] <- as.Date(as.character(Fichero_1[,"Fecha"]), format="%d/%m/%Y")
Fichero_2 <- subset(Fichero_1, Fichero_1$Fecha<="2007-02-03" & Fichero_1$Fecha>="2007-02-01")
par_inic <- par()
fix(Fichero_1)
head(Fichero_2)
plot(Fichero_2$Pot_Activa, typ="l", axes="F", ann="F")
axes(2)
axis(2)
axis(2, tick="T")
axis(2)
axis(2, tick="T")
q()
Fichero <- read.csv("/home/federico/Personal/profesor/AGAEVE/COURSERA/Exploratory_Data_Analysis/Project_1/household_power_consumption.txt", sep=";", header = TRUE, na.strings="?", col.names=c("Fecha","Hora","Pot_Activa","Pot_Reactiva","Tension","Intensidad","Medida_1","Medida_2","Medida_3"))
Fichero_1 <- Fichero
Tiempo <- Fichero_1[,Fichero_1$Fecha, Fichero_1$Hora]
Tiempo <- subset(Fichero_1,1:2)
Tiempo <- Fichero_1[,1:2]
head(Tiempo)
Tiempo_2 <- paste(Tiempo$Fecha,Tiempo$Hora)
head(Tiempo_2)
Fichero_3 <- Fichero_1 + Tiempo_2
Fichero_1$Tiempo <- Tiempo_2
head (Fichero_1)
?strptime
str(Fichero_3)
str (Fichero_1)
strptime(Fichero_1$Tiempo, format="%d/%m/%Y %H:%M:%S")
str (Fichero_1)
Fichero_3 <- subset(Fichero_1, Fichero_1$Tiempo <= "03/02/2006" & Fichero_1$Tiempo >="01/01/2006")
head (Fichero_3)
Fichero_3 <- subset(Fichero_1, Fichero_1$Tiempo <= "03/02/2006 00:00:00" & Fichero_1$Tiempo >="01/02/2006 00:00:00")
head (Fichero_3)
str(Fichero_2)
str(Fichero_1)
Fichero_3 <- subset(Fichero_1, strptime(Fichero_1$Tiempo, format="%d/%m/%Y %H:%M:%S") <= "03/02/2006 00:00:00" & strptime(Fichero_1$Tiempo, format="%d/%m/%Y %H:%M:%S") >="01/02/2006 00:00:00")
head (Fichero_3)
a <- c( "11NOV2008:03:15:00", "11NOV2009:23:15:00", "11NOV2010:03:15:00" )
b <- strptime(a, format="%d%b%Y:%H:%M:%S")
b
str(b)
b[1]<"2008-11-11 03:15:00"
b[1]<"2008-11-11 03:20:00"
b[1]<"2008-11-11"
b[1]<"2008-11-10"
b[1]<"2008-11-12"
str(Fichero_2)
str(Fichero_1)
Fichero_1$Tiempo2 <- strptime(Fichero_1$Tiempo, format="%d/%m/%Y %H:%M:%S")
str(Fichero_1)
Fichero_3 <- subset(Fichero_1, Fichero_1$Tiempo2 <= "03/02/2006 00:00:00" & Fichero_1$Tiempo2 >="01/02/2006 00:00:00")
head(Fichero_3)
str(Fichero_3)
str(Fichero_1)
Fichero_3 <- subset(Fichero_1, Fichero_1$Tiempo2 >= "2006-02-01" & Fichero_1$Tiempo2 <="2006-02-03")
str(Fichero_3)
Fichero_3 <- subset(Fichero_1, Fichero_1$Tiempo2 >= "2007-02-01" & Fichero_1$Tiempo2 <="2007-02-03")
str(Fichero_3)
Fichero <- read.csv("/home/federico/Personal/profesor/AGAEVE/COURSERA/Exploratory_Data_Analysis/Project_1/household_power_consumption.txt", sep=";", header = TRUE, na.strings="?", col.names=c("Fecha","Hora","Pot_Activa","Pot_Reactiva","Tension","Intensidad","Medida_1","Medida_2","Medida_3"))
Fichero_1 <- Fichero
#Creamos una nueva columna uniendo la fecha y la hora:
Fichero_1$Tiempo <- paste(Fichero_1$Fecha,Fichero_1$Hora)
str(Fichero_1)
strptime(Fichero_1$Tiempo, format="%d/%m/%Y %H:%M:%S")
str(Fichero_1)
Fichero_1$Tiempo <- strptime(Fichero_1$Tiempo, format="%d/%m/%Y %H:%M:%S")
str(Fichero_1)
Fichero_2 <- subset(Fichero_1, Fichero_1$Tiempo>="2007-02-01" & Fichero_1$Tiempo <="2007-02-03")
str(Fichero_2)
hist(Fichero_2$Pot_Activa, col="red")
hist(Fichero_2$Pot_Activa, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
plot(Fichero_2$Pot_Activa, typ="l")
plot(Fichero_2$Pot_Activa, typ="l", ann="F")
plot(Fichero_2$Pot_Activa, typ="l", ann="F", axes = "F")
plot(Fichero_2$Pot_Activa, typ="l", ann="F", axes = "F")
axis(2, labels = "Global Active Power (kilowatts)")
axis(2)
plot(Fichero_2$Pot_Activa, typ="l", ann="F", axes = "F", ylab = "Global Active Power (kilowatts)")
axis(2)
plot(Fichero_2$Pot_Activa, typ="l", axes = "F", ylab = "Global Active Power (kilowatts)")
plot(Fichero_2$Pot_Activa, typ="l", axes = "F", ylab = "Global Active Power (kilowatts)", xlab="")
axis(2)
axis(1, labels= as.character(Fichero_2$Tiempo, format="%a"))
axis(1, at=Fichero_2$Fecha, labels= as.character(Fichero_2$Tiempo, format="%a"))
axis(1, at=Fichero_2$Fecha, labels= as.character(Fichero_2$Tiempo))
axis(1, at=Fichero_2$Fecha, labels= as.character(Fichero_2$Tiempo, format="%a"))
axis(1, at=Fichero_2$Tiempo, labels= as.character(Fichero_2$Tiempo, format="%a"))
axis(1, at=as.character(Fichero_2$Tiempo), labels= as.character(Fichero_2$Tiempo, format="%a"))
axis(1, at=Fichero_2$Fecha, labels= as.character(Fichero_2$Tiempo, format="%a"))
head(Fichero_2)
a <- Fichero_2[,Fichero_2$Fecha = "2/2/2007"]
a <- Fichero_2[,Fichero_2$Fecha == "2/2/2007"]
str(Fichero_2$Fecha)
head(Fichero_2$Fecha)
str(Fichero_2)
Fichero <- read.csv("/home/federico/Personal/profesor/AGAEVE/COURSERA/Exploratory_Data_Analysis/Project_1/household_power_consumption.txt", sep=";", header = TRUE, na.strings="?", col.names=c("Fecha","Hora","Pot_Activa","Pot_Reactiva","Tension","Intensidad","Medida_1","Medida_2","Medida_3"))
Fichero_1 <- Fichero
#Creamos una nueva columna uniendo la fecha y la hora:
Fichero_1$Tiempo <- paste(Fichero_1$Fecha,Fichero_1$Hora)
# La pasamos ahora a formato tiempo: POSIXlt:
Fichero_1$Tiempo <- strptime(Fichero_1$Tiempo, format="%d/%m/%Y %H:%M:%S")
#Y hacemos el subconjunto de fechas:
Fichero_2 <- subset(Fichero_1, Fichero_1$Tiempo>="2007-02-01" & Fichero_1$Tiempo <="2007-02-03")
#Primer grafico:
hist(Fichero_2$Pot_Activa, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
#Segundo grafico:
plot(Fichero_2$Pot_Activa, typ="l", axes = "F", ylab = "Global Active Power (kilowatts)", xlab="")
axis(2)
axis(1, at=Fichero_2$Fecha, labels= as.character(Fichero_2$Tiempo, format="%a"))
axis(1, at=c(1,nrow(Fichero_2)/2,nrow(Fichero_2), labels= as.character(Fichero_2$Tiempo, format="%a"))
)
axis(1, at=c(1,nrow(Fichero_2)/2,nrow(Fichero_2)), labels= as.character(Fichero_2$Tiempo, format="%a"))
axis(1, at=c(1,nrow(Fichero_2)/2,nrow(Fichero_2)), labels= c("un9o","dos","tres"))
plot(Fichero_2$Pot_Activa, typ="l", axes = "F", ylab = "Global Active Power (kilowatts)", xlab="")
axis(1, at=c(1,nrow(Fichero_2)/2,nrow(Fichero_2)), labels= c("un9o","dos","tres"))
programa1 <- c(rep(3,"prog1"))
programa1 <- c(rep("prog1",3))
codigo1 <- c("41","40","42","43")
codigo2 <- c("41","41","42","44")
codigo1 <- c("41","42","43")
programa1 <- c(rep("prog1",3))
programa2 <- c(rep("prog2",3))
programa3 <- c(rep("prog3",3))
df1 <- data.frame(codigo1,programa1)
df2 <- data.frame(codigo2,programa2)
df3 <- data.frame(codigo3,programa3)
codigo3 <- c("41","42","43")
df3 <- data.frame(codigo3,programa3)
View(df1)
View(df2)
codigo1
programa2 <- c(rep("prog2",4))
df2 <- data.frame(codigo2,programa2)
df3 <- data.frame(codigo3,programa3)
View(df2)
View(df3)
codigo2 <- c("40","41","42","44")
df2 <- data.frame(codigo2,programa2)
View(df2)
codigos <- c(df1$codigo1,df2$codigo2,df3$codigo3)
codigo
codigos
View(codigos)
total <- data.frame(df1,df2,df3)
df1$codigo1
a <- df1$codigo1
a <- df1$codigo1
b <- df2$codigo2
c <- df3$codigo3
codigos <- c(a,b, c)
codigos
View(df2)
a
d <- a,b
d <- a +b
codigos <- union(a,b, c)
d <- union(df1,df2,df3)
d <- union(df1,df2)
d
View(d)
a <- data.frame(c(11,12,13,15),rep("prog1",4))
a
b <- data.frame(c(10,12,13,15),rep("prog1",4))
c <- data.frame(c(12,13,15),rep("prog1",3))
a <- data.frame(c(11,12,13,14,15),rep("prog1",5))
a <- data.frame(c(11,12,13,15),rep("prog1",4))
b <- data.frame(c(10,12,13,15),rep("prog1",4))
c <- data.frame(c(12,13,15),rep("prog1",3))
d <- data.frame(c(11,12,13,14,15),rep("prog1",5))
Centros <- as.numeric(a$c.11..12..13..15.)
Centros
Centros <- Centros + as.numeric(b$c.10..12..13..15.)
Centros
Centros <- as.numeric(a$c.11..12..13..15.)
?cbind
Centros <- cbind(Centros , as.numeric(b$c.10..12..13..15.))
Centros
Centros <- as.numeric(a$c.11..12..13..15.)
Centros <- rbind(Centros , as.numeric(b$c.10..12..13..15.))
Centros
Centros <- as.numeric(a$c.11..12..13..15.)
Centros <- c(Centros , as.numeric(b$c.10..12..13..15.))
Centros
Centros <- as.numeric(a$c.11..12..13..15.)
Centros
Centros <- as.numeric(a$c.11..12..13..15.)
Centros <- c(Centros , as.numeric(b$c.10..12..13..15.),as.numeric(c$c.12..13..15.),as.numeric(d$c.11..12..13..14..15.))
Centros
unique(Centros)
Centros <- unique(Centros)
Centros
Prog1 <- rep(0,length(Centros))
Prog1 <- rep(0,length(Centros))
Prog2 <- Prog1
Prog3 <- Prog1
Prog4 <- Prog1
Prog1 <- rep("NO",length(Centros))
Prog2 <- Prog1
Prog3 <- Prog1
Prog4 <- Prog1
Final <- data.frame(Centros,Prog1,Prog2,Prog3,Prog4)
Centros[1]
Centros[5]
Centros[6]
Centros[7]
i=1
Final[1,1]
Final[1,2]
Final[2,1]
i=1
while(Centros[i]!="NA")
{
if (Final$Centros[i,1] %in% a$c.11..12..13..15.) Final$Prog1 = "SI"
if (Final$Centros[i,1] %in% b$c.10..12..13..15.) Final$Prog2 = "SI"
if (Final$Centros[i,1] %in% c$c.12..13..15.) Final$Prog3 = "SI"
if (Final$Centros[i,1] %in% d$c.11..12..13..14..15.) Final$Prog4 = "SI"
i <- i+1
}
i=1
while(Centros[i]!=NA)
{
if (Final$Centros[i,1] %in% a$c.11..12..13..15.) Final$Prog1 = "SI"
if (Final$Centros[i,1] %in% b$c.10..12..13..15.) Final$Prog2 = "SI"
if (Final$Centros[i,1] %in% c$c.12..13..15.) Final$Prog3 = "SI"
if (Final$Centros[i,1] %in% d$c.11..12..13..14..15.) Final$Prog4 = "SI"
i <- i+1
}
Centros[7]
Centros[6]
Centros[7] != NA
Centros[7] == NA
View(Final)
for (i in 1:length(Final$Centros)
{
if (Final$Centros[i,1] %in% a$c.11..12..13..15.) Final$Prog1 = "SI"
if (Final$Centros[i,1] %in% b$c.10..12..13..15.) Final$Prog2 = "SI"
for (i in 1:length(Final$Centros))
{
if (Final$Centros[i,1] %in% a$c.11..12..13..15.) Final$Prog1 = "SI"
if (Final$Centros[i,1] %in% b$c.10..12..13..15.) Final$Prog2 = "SI"
if (Final$Centros[i,1] %in% c$c.12..13..15.) Final$Prog3 = "SI"
if (Final$Centros[i,1] %in% d$c.11..12..13..14..15.) Final$Prog4 = "SI"
}
if (Final$Centros[i,1] %in% a$c.11..12..13..15.) Final$Prog1 = "SI"
Final$Centros[length(Final$Centros),1]
length(Final$Centros)
for (i in 1:length(Final$Centros))
{
if (Final$Centros[i] %in% a$c.11..12..13..15.) Final$Prog1 = "SI"
if (Final$Centros[i] %in% b$c.10..12..13..15.) Final$Prog2 = "SI"
if (Final$Centros[i] %in% c$c.12..13..15.) Final$Prog3 = "SI"
if (Final$Centros[i] %in% d$c.11..12..13..14..15.) Final$Prog4 = "SI"
}
length(Final$Centros)
Final
Final$Centros[5]
Final$Centros[5] %in% a$c.11..12..13..15.
Prog1 <- rep("NO",length(Centros))
Prog2 <- Prog1
Prog3 <- Prog1
Prog4 <- Prog1
Final <- data.frame(Centros,Prog1,Prog2,Prog3,Prog4)
View(Final)
# Comprobamos cuando cada centro está en un programa
for (i in 1:length(Final$Centros))
{
if (Final$Centros[i] %in% a$c.11..12..13..15.) Final$Prog1 = "SI"
if (Final$Centros[i] %in% b$c.10..12..13..15.) Final$Prog2 = "SI"
if (Final$Centros[i] %in% c$c.12..13..15.) Final$Prog3 = "SI"
if (Final$Centros[i] %in% d$c.11..12..13..14..15.) Final$Prog4 = "SI"
}
View(Final)
Prog1 <- rep("NO",length(Centros))
Prog2 <- Prog1
Prog3 <- Prog1
Prog4 <- Prog1
Final <- data.frame(Centros,Prog1,Prog2,Prog3,Prog4)
# Comprobamos cuando cada centro está en un programa
for (i in 1:length(Final$Centros))
{
if (Final$Centros[i] %in% a$c.11..12..13..15.) {Final$Prog1 = "SI"}
if (Final$Centros[i] %in% b$c.10..12..13..15.) {Final$Prog2 = "SI"}
if (Final$Centros[i] %in% c$c.12..13..15.) {Final$Prog3 = "SI"}
if (Final$Centros[i] %in% d$c.11..12..13..14..15.) {Final$Prog4 = "SI"}
}
View(Final)
Final$Centros[1] %in% a$c.11..12..13..15.
Prog1 <- rep("NO",length(Centros))
Prog2 <- Prog1
Prog3 <- Prog1
Prog4 <- Prog1
Final <- data.frame(Centros,Prog1,Prog2,Prog3,Prog4)
for (i in 1:length(Final$Centros))
{
if (as.numeric(Final$Centros[i]) %in% as.numeric(a$c.11..12..13..15.)) {Final$Prog1 = "SI"}
if (as.numeric(Final$Centros[i]) %in% as.numeric(b$c.10..12..13..15.)) {Final$Prog2 = "SI"}
if (as.numeric(Final$Centros[i]) %in% as.numeric(c$c.12..13..15.)) {Final$Prog3 = "SI"}
if (as.numeric(Final$Centros[i]) %in% as.numeric(d$c.11..12..13..14..15.)) {Final$Prog4 = "SI"}
}
View(Final)
Final$Centros[1] %in% a$c.11..12..13..15.
Final$Centros[1] %in% b$c.10..12..13..15.
for (i in 1:length(Final$Centros))
{
if (as.numeric(Final$Centros[i]) %in% as.numeric(a$c.11..12..13..15.)) {Final$Prog1 = "SI"} else {Final$Prog1="NO"}
}
View(Final)
for (i in 1:length(Final$Centros))
{
if (as.numeric(Final$Centros[i]) %in% as.numeric(a$c.11..12..13..15.)) {Final$Prog1 = "SI"} else {Final$Prog1="NO"}
if (as.numeric(Final$Centros[i]) %in% as.numeric(b$c.10..12..13..15.)) {Final$Prog2 = "SI"} else {Final$Prog2="NO"}
if (as.numeric(Final$Centros[i]) %in% as.numeric(c$c.12..13..15.)) {Final$Prog3 = "SI"} else {Final$Prog3="NO"}
if (as.numeric(Final$Centros[i]) %in% as.numeric(d$c.11..12..13..14..15.)) {Final$Prog4 = "SI"} else {Final$Prog4="NO"}
}
View(Final)
Prog1 <- rep("NO",length(Centros))
Prog2 <- Prog1
Prog3 <- Prog1
Prog4 <- Prog1
Final <- data.frame(Centros,Prog1,Prog2,Prog3,Prog4)
View(Final)
for (i in 1:length(Final$Centros))
{
if (as.numeric(Final$Centros[i]) %in% as.numeric(a$c.11..12..13..15.)) {Final$Prog1[i] = "SI"} else {Final$Prog1[i]="NO"}
if (as.numeric(Final$Centros[i]) %in% as.numeric(b$c.10..12..13..15.)) {Final$Prog2[i] = "SI"} else {Final$Prog2[i]="NO"}
if (as.numeric(Final$Centros[i]) %in% as.numeric(c$c.12..13..15.)) {Final$Prog3[i] = "SI"} else {Final$Prog3[i]="NO"}
if (as.numeric(Final$Centros[i]) %in% as.numeric(d$c.11..12..13..14..15.)) {Final$Prog4[i] = "SI"} else {Final$Prog4[i]="NO"}
}
View(Final)
Prog1 <- rep("NO",length(Centros))
Prog2 <- Prog1
Prog3 <- Prog1
Prog4 <- Prog1
Final <- data.frame(Centros,Prog1,Prog2,Prog3,Prog4)
Final$Prog1[1]
Final$Prog1
if (as.numeric(Final$Centros[i]) %in% as.numeric(a$c.11..12..13..15.)) {Final$Prog1[i] = "SI"} else {Final$Prog1[i]="NO"}
if (as.numeric(Final$Centros[1]) %in% as.numeric(a$c.11..12..13..15.)) {Final$Prog1[1] = "SI"} else {Final$Prog1[1]="NO"}
str(Final)
if (as.numeric(Final$Centros[1]) %in% as.numeric(a$c.11..12..13..15.)) {Final$Prog1[1] = SI} else {Final$Prog1[1]=NO}
if (as.numeric(Final$Centros[1]) %in% as.numeric(a$c.11..12..13..15.)) {Final$Prog1[1] = "SI"} else {Final$Prog1[1]="NO"}
warnings()
?data.frame
Final <- data.frame(Centros,Prog1,Prog2,Prog3,Prog4, stringsAsFactors = FALSE)
if (as.numeric(Final$Centros[1]) %in% as.numeric(a$c.11..12..13..15.)) {Final$Prog1[1] = "SI"} else {Final$Prog1[1]="NO"}
View(Final)
for (i in 1:length(Final$Centros))
{
if (as.numeric(Final$Centros[i]) %in% as.numeric(a$c.11..12..13..15.)) {Final$Prog1[i] = "SI"} else {Final$Prog1[i]="NO"}
if (as.numeric(Final$Centros[i]) %in% as.numeric(b$c.10..12..13..15.)) {Final$Prog2[i] = "SI"} else {Final$Prog2[i]="NO"}
if (as.numeric(Final$Centros[i]) %in% as.numeric(c$c.12..13..15.)) {Final$Prog3[i] = "SI"} else {Final$Prog3[i]="NO"}
if (as.numeric(Final$Centros[i]) %in% as.numeric(d$c.11..12..13..14..15.)) {Final$Prog4[i] = "SI"} else {Final$Prog4[i]="NO"}
}
View(Final)
library(psych) # This activates the R package8 ‘psych’ (Revelle, 2011) for the
install.packages("psych")
library(psych) # This activates the R package8 ‘psych’ (Revelle, 2011) for the
data(bfi) # This loads the dataset bfi contained in the R package psych.
View(bfi)
attach(bfi) # This attaches the dataset bfi to the current session in R.
bfi5items<-data.frame(N1,N2,N3,N4,N5) # This creates a new dataset, labeled bfi5items, containing only five
View(bfi5items)
describe(bfi5items) # This describes the dataset bfi5items, providing descriptives, such
bfi5items # This displays the object/dataset called bfi5items.
polychoric(bfi5items) # This provides the polychoric correlation matrix for the dataset
cor(bfi5items, y=NULL,
use="complete.obs", method=c("pearson”))
cov(bfi5items, y=NULL,
use="complete.obs", method=c("pearson”))
cor(bfi5items, y=NULL, use="complete.obs", method=c("pearson”))
)
)
q
))))))
cov(bfi5items, y=NULL,
use="complete.obs", method=c("pearson”))
?cor
cor(bfi5items,y=NULL, use="complete.obs",method=c("pearson"))
cov(bfi5items, y=NULL, use="complete.obs", method=c("pearson”))
skew(bfi5items) # This provides the skewness for all items in the bfi5items dataset.
cor(bfi5items,y=NULL, use="complete.obs",method=c("pearson"))
cov(bfi5items,y=NULL,use="complete.obs",method = c("pearson"))
skew(bfi5items) # This provides the skewness for all items in the bfi5items dataset.
kurtosi(bfi5items) # This provides the kurtosis9 for all items in the bfi5items dataset.
scree(bfi5items) # This provides the scree plots of the eigenvalues for a factor
examplename<-polychoric(bfi5items) # This saves the polychoric correlation matrix, and current session in R.
View(examplename)
examplename
alpha(examplename$rho)
alpha(bfi5items) # This provides raw/Cronbach’s and standardized alpha of the
fa(bfi5items) # This provides the factor loadings (MR1), communalities (h2),
fa(examplename$rho) # This provides the factor loadings (MR1), communalities (h2),
guttman(examplename$rho) # This provides alternative estimates of reliability for the data
guttman(examplename$rho)
install.packages("GPArotation")
guttman(examplename$rho)
guttman(bfi5items) # Equivalent to the command above, this provides a list of
omega(examplename$rho) # This provides the ordinal versions of the reliability coefficients
omega(bfi5items) # This provides omega coefficients for the data matrix bfi5items.
alpha(bfi5items)
alpha(bfi5items)
library(RgoogleMaps)
lat <- c(36.2,37.7) #define our map's ylim
lon <- c(-10,1) #define our map's xlim
center = c(mean(lat), mean(lon))  #tell what point to center on
# zoom <- 7#zoom: 1 = furthest out (entire globe), larger numbers = closer in 6
zoom <- 7 #MaxZoom(lat,lon, size = c(640,640))
terrmap <- GetMap(center=center, zoom=zoom, maptype= "roadmap", destfile = "mobile.png") #lots of visual options, just like google maps: maptype = c("roadmap", "mobile", "satellite", "terrain", "hybrid", "mapmaker-roadmap", "mapmaker-hybrid")
?PlotOnStaticMap
PlotOnStaticMap(terrmap,lat = 36.8,lon = -5)
PlotOnStaticMap(terrmap,lat = 36.8,lon = -5,cex=1.5,pch=20,col="red")
?PlotPolysOnStaticMap
library(RgoogleMaps)
lat <- c(36.2,37.7) #define our map's ylim
lon <- c(-10,1) #define our map's xlim
center = c(mean(lat), mean(lon))  #tell what point to center on
# zoom <- 7#zoom: 1 = furthest out (entire globe), larger numbers = closer in 6
zoom <- 7 #MaxZoom(lat,lon, size = c(640,640))
terrmap <- GetMap(center=center, zoom=zoom, maptype= "hybrid", destfile = "hybrid.png") #lots of visual options, just like google maps: maptype = c("roadmap", "mobile", "satellite", "terrain", "hybrid", "mapmaker-roadmap", "mapmaker-hybrid")
# Ahora ponemos marcas
PlotOnStaticMap(terrmap,lat = 36.8,lon = -5,cex=1.5,pch=20,col="red", destfile = "Mi_Mapa.png")
terrmap <- GetMap(center=center, zoom=zoom, maptype= "mapmaker-roadmap") #lots of visual options, just like google maps: maptype = c("roadmap", "mobile", "satellite", "terrain", "hybrid", "mapmaker-roadmap", "mapmaker-hybrid")
# Ahora ponemos marcas
PlotOnStaticMap(terrmap,lat = 36.8,lon = -5,cex=1.5,pch=20,col="red", destfile = "Mi_Mapa.png")
Train <- read.csv("../FaceRep_Manual/Data//training.csv")
setwd("~/Personal/GITHUB//FaceRec/")
Train <- read.csv("../FaceRep_Manual/Data//training.csv")
str(Train)
str(Train$Image)
Train_Images <- as.numeric(Train$Image)
str(Train_Images)
Train_Images[1,2]
dim(Train_Images)
is.list(Train_Images)
??display
?print
setwd("~/Personal/GITHUB//FaceRec/")
# Cargar los dos data frame
Train <- read.csv("../FaceRep_Manual/Data//training.csv")
Train_Images <- as.numeric(Train$Image)
save(Train_Images,file="../FaceRep_Manual/Data/Imagenes.RData")
Train_Images <. read.csv("../FaceRep_Manual/Data//Imagenes.RData")
Train_Images <- read.csv("../FaceRep_Manual/Data//Imagenes.RData")
save(Train_Images,file="../FaceRep_Manual/Data/Imagenes.csv")
Train_Images <- read.csv("../FaceRep_Manual/Data//Imagenes.csv")
Train_Images <- as.numeric(Train$Image)
str(Train_Images)
str(Train_Images[1])
str(Train$Image)
m <- matrix(Train_Images[5],96,96)
image(m)
m
m <- matrix(Train$Image[5],96,96)
image(m)
Train$Image[5]
m <- matrix(Train$Image[5],96,96)
image(m)
m <- matrix(as.numeric(Train$Image[5]),96,96)
image(m)
image(m, axes = FALSE, col = grey(seq(0, 1, length = 256)))
is.matrix(m)
str(m)
?matrix
96*96
str(Train$Image[5])
sqrt(6494)
sqrt(6495)
sqrt(6493)
sqrt(1301)
sqrt(1300)
str(Train)
Train_Images[1]
Train$Image[1,31]
Train[1,31]
Imagenes_Train <- as.integer(unlist(strsplit(Train$Image, " ")))
