# Primera Imagen
num_imagen <- 1
Imagen_Train <- as.integer(unlist(strsplit(Train$Image[num_imagen], " ")))
# Para convertirlas en imagenes debemos crear una matriz de 96 * 96 y previamente tenemos que revertir la matriz, poner el primer número al final, el segundo el penúltimo,... y
m_1 <- matrix(rev(Imagen_Train),96,96)
# Segunda Imagen
num_imagen <- 2
Imagen_Train <- as.integer(unlist(strsplit(Train$Image[num_imagen], " ")))
# Para convertirlas en imagenes debemos crear una matriz de 96 * 96 y previamente tenemos que revertir la matriz, poner el primer número al final, el segundo el penúltimo,... y
m_2 <- matrix(rev(Imagen_Train),96,96)
image(m_1, col=gray((0:255)/255))
col_imagenes <- c(m_1,m_2)
str(col_imagenes)
?vector
is.vector(col_imagenes)
is.list(col_imagenes)
col_imagenes <- as.vector(m_1,m_2)
col_imagenes <- as.vector(m_1,m_2, mode = "any")
col_imagenes <- list(m_1,m_2)
str(col_imagenes)
num_imagen <- 2
Imagen_Train <- as.integer(unlist(strsplit(Train$Image[num_imagen], " ")))
# Para convertirlas en imagenes debemos crear una matriz de 96 * 96 y previamente tenemos que revertir la matriz, poner el primer número al final, el segundo el penúltimo,... y
m_2 <- matrix(rev(Imagen_Train),96,96)
image(m_2)
Todas_Imagenes <- list(m_1,m_2)
?save
save(Todas_Imagenes,file= "Imagenes.saved")
save(Todas_Imagenes,file= "DATA/Imagenes.saved")
# Y cargarla con load("DATA/Imagenes.saved")
Mas_Images <- load("DATA/Imagenes.saved")
str(Mas_Images)
Mas_Images
str(Todas_Imagenes)
save(Todas_Imagenes,file= "DATA/Imagenes.saved")
Mas_Images <- load("DATA/Imagenes.saved")
str(Mas_Images)
Mas_Images <- load(file="DATA/Imagenes.saved")
str(Mas_Images)
Mas_Images[[1]]
Mas_Images[[2]]
Todas_Imagenes[[2]]
?saveRDS
saveRDS(Todas_Imagenes,file= "DATA/Imagenes.saved")
# Y cargarla con Todas_Imagenes <- loadRDS("DATA/Imagenes.saved")
Todas_Imagenes_Mas <- loadRDS("DATA/Imagenes.saved")
Todas_Imagenes_Mas <- readRDS("DATA/Imagenes.saved")
?append
append(Todas_Imagenes,m_1,after = length(Todas_Imagenes))
str(Todas_Imagenes)
Todas_Imagenes_Mas_2 <- append(Todas_Imagenes,m_1,after = length(Todas_Imagenes))
str(Todas_Imagenes_Mas_2)
?as.matrix
Todas_Imagenes_Mas_2 <- append(Todas_Imagenes,as.matrix(m_1),after = length(Todas_Imagenes))
str(Todas_Imagenes_Mas_2)
length(Todas_Imagenes)
Todas_Imagenes_Mas_2 <- as.list(append(Todas_Imagenes,as.matrix(m_1),after = length(Todas_Imagenes)))
str(Todas_Imagenes_Mas_2)
?lst.add
?list
Todas_Imagenes[[length(Todas_Imagenes)+1]]
Todas_Imagenes[[length(Todas_Imagenes)+1]] <- m_2
Todas_Imagenes[[length(Todas_Imagenes)+1]]
str(Todas_Imagenes)
Todas_Imagenes <- list(m_1)
Todas_Imagenes[[length(Todas_Imagenes)+1]] <- m_2
indice <- seq(1:length(Train$Image))
Get_Image_Matrix <- function(x,y)
{
Matriz <- matrix(rev(as.integer(unlist(strsplit(y$Image[x])))),96,96)
Matrix
}
m_3 <- Get_Image_Matrix(3,Train)
Get_Image_Matrix <- function(x,y)
{
Matriz <- matrix(rev(as.integer(unlist(strsplit(x$Image[y]," ")))),96,96)
Matrix
}
m_3 <- Get_Image_Matrix(Train,3)
Get_Image_Matrix <- function(x,y)
{
Matriz <- matrix(rev(as.integer(unlist(strsplit(x$Image[y]," ")))),96,96)
Matriz
}
m_3 <- Get_Image_Matrix(Train,3)
Todas_Imagenes[[length(Todas_Imagenes)+1]] <- m_3
str(Todas_Imagenes)
image(m_3)
Todas_Imagenes <- list()
Todas_Imagenes[[length(Todas_Imagenes)+1]] <- lapply(indice, Get_Image_Matrix(x = Train,y = indice))
Trail_Breve <- Trail[1:5,]
Train_Breve <- Train[1:5,]
lapply(indice, Get_Image_Matrix(x = Train,y = indice))
Get_Image_Matrix <- function(Columna_Imagen = "Train_Breve$Image",y)
{
Resultado <- matrix(rev(as.integer(unlist(strsplit(Columna_Imagen[y]," ")))),96,96)
Resultado
}
m_3 <- Get_Image_Matrix(y=3)
Get_Image_Matrix <- function(Columna_Imagen = "Train_Breve$Image",Numero_de_Imagen)
{
temp <- as.integer(unlist(strsplit(Columna_Imagen[Numero_de_Imagen]," ")))
Resultado <- matrix(rev(temp),96,96)
Resultado
}
m_3 <- Get_Image_Matrix(Numero_de_Imagen = 3)
m_3 <- Get_Image_Matrix(Columna_Imagen = Train$Image, Numero_de_Imagen = 3)
Get_Image_Matrix <- function(Columna_Imagen = Train_Breve$Image,Numero_de_Imagen)
{
temp <- as.integer(unlist(strsplit(Columna_Imagen[Numero_de_Imagen]," ")))
Resultado <- matrix(rev(temp),96,96)
Resultado
}
m_4 <- Get_Image_Matrix(Numero_de_Imagen = 4)
image(m__4)
image(m_4)
?apply
indice <- seq(1:length(Train$Image))
indice <- seq(1:length(Train_Breve$Image))
Todas_Imagenes <- lapply(indice,Get_Image_Matrix(Numero_de_Imagen = indice))
Todas_Imagenes <- lapply(indice,Get_Image_Matrix())
Todas_Imagenes <- lapply(indice,FUN = Get_Image_Matrix(Numero_de_Imagen = indice))
is.function(Get_Image_Matrix)
Todas_Imagenes <- lapply(indice,FUN = Get_Image_Matrix)
Todas_Imagenes <- apply(indice,1,FUN = Get_Image_Matrix)
indice <- seq(1:length(Train$Image))
indice <- seq(1:length(Train_Breve))
indice <- seq(1:length(Train_Breve$Image))
indice <- seq(1:length(Train_Breve$Image))
Todas_Imagenes <- list()
for(i in 1:length(Train_Breve)){
m <- Get_Image_Matrix(Numero_de_Imagen = i)
Todas_Imagenes[[length(Todas_Imagenes)+1]] <- m
}
i <-1
Todas_Imagenes <- list()
m <- Get_Image_Matrix(Numero_de_Imagen = i)
Todas_Imagenes[[length(Todas_Imagenes)+1]] <- m
i <- i+1
m <- Get_Image_Matrix(Numero_de_Imagen = i)
Todas_Imagenes[[length(Todas_Imagenes)+1]] <- m
lapply(indice, function(x) Todas_Imagenes[[length(Todas_Imagenes)+1]] <-
Get_Image_Matrix(x))
lapply(indice, function(x) Todas_Imagenes[[length(Todas_Imagenes)+1]] <-
Get_Image_Matrix(Numero_de_Imagen = x))
Todas_Imagenes_Mas<- lapply(indice, function(x) Todas_Imagenes[[length(Todas_Imagenes)+1]] <-
Get_Image_Matrix(Numero_de_Imagen = x))
str(Todas_Imagenes_Mas)
Todas_Imagenes_Mas<- lapply(indice, function(x) {
Todas_Imagenes[[length(Todas_Imagenes)+1]] <-
Get_Image_Matrix(Numero_de_Imagen = x}))
Todas_Imagenes_Mas<- lapply(indice, function(x) {
Todas_Imagenes[[length(Todas_Imagenes)+1]] <-
Get_Image_Matrix(Numero_de_Imagen = x)})
Las_Imagenes <- list()
Todas_Imagenes_Mas_2<- lapply(indice, function(x) {
temp <- Get_Image_Matrix(Numero_de_Imagen = x)
Las_Imagenes[[length(Las_Imagenes)+1]]})
Todas_Imagenes_Mas_2<- lapply(indice, function(x) {
temp <- Get_Image_Matrix(Numero_de_Imagen = x)
Las_Imagenes[[length(Las_Imagenes)+1]] <- temp})
Las_Imagenes <- list()
# La llenamos haciendo el apply
Todas_Imagenes_Mas_2<- lapply(indice, function(x) {
temp <- Get_Image_Matrix(Columna_Imagen = Train$Image,Numero_de_Imagen = x)
Las_Imagenes[[length(Las_Imagenes)+1]] <- temp})
indice <- seq(1:length(Train$Image))
# Definimos la lista que contiene todas las imagenes en su formato de matriz 96 x 96 pixeles
Las_Imagenes <- list()
# La llenamos haciendo el apply
Todas_Imagenes_Mas_2<- lapply(indice, function(x) {
temp <- Get_Image_Matrix(Columna_Imagen = Train$Image,Numero_de_Imagen = x)
Las_Imagenes[[length(Las_Imagenes)+1]] <- temp})
saveRDS(Todas_Imagenes,file= "DATA/Imagenes.saved")
saveRDS(Todas_Imagenes_Mas_2,file= "DATA/Imagenes.saved")
Train <- read.csv("../DATA_FaceRec//Data/training.csv",stringsAsFactors=F)
Get_Image_Matrix <- function(Columna_Imagen = Train$Image,Numero_de_Imagen)
{
temp <- as.integer(unlist(strsplit(Columna_Imagen[Numero_de_Imagen]," ")))
Resultado <- matrix(rev(temp),96,96)
Resultado
}
indice <- seq(1:length(Train$Image))
Las_Imagenes <- list()
Todas_Imagenes<- lapply(indice, function(x)
{
temp <- Get_Image_Matrix(Columna_Imagen = Train$Image,Numero_de_Imagen = x)
Las_Imagenes[[length(Las_Imagenes)+1]] <- temp
})
saveRDS(Todas_Imagenes,file= "DATA/Imagenes.saved")
NumeroImagen <- 80
# la vemos  en blanco y negro
image(1:96,1:96,Las_Imagenes[[NumeroImagen]],col=gray((0:255)/255))
NumeroImagen <- 8
image(1:96,1:96,Las_Imagenes[[NumeroImagen]],col=gray((0:255)/255))
NumeroImagen <- 1
# la vemos  en blanco y negro
image(1:96,1:96,Las_Imagenes[[NumeroImagen]],col=gray((0:255)/255))
NumeroImagen <- 80
# la vemos  en blanco y negro
image(1:96,1:96,Todas_Imagenes[[NumeroImagen]],col=gray((0:255)/255))
indice <- seq(from = 1, to = (ncol(Train)-2) ,by =2)
lapply(indice, function(x,y) points(96-y[NumeroImagen,x],96-y[NumeroImagen,x+1], col = "blue", pch = 19), y=Train )
set.seed(123)
Train_Split <- read.csv("../DATA_FaceRec//Data/training.csv",stringsAsFactors=F)
######################################
#               DIVIDIR LOS DATOS EN  DOS DATA FRAME Mi.Train Y Mi.Test
######################################
# Definimos la proporción definida en porcentaje, ejemplo 80% sería proporcion <- 80
proporcion <- 80
# Tamaño de la muestra:
Muestra_Size <- floor((proporcion/100) * nrow(Train_Split))
## set the seed to make your partition reproductible
set.seed(123)
# Ahora viene la división:
Indice <- sample(seq_len(nrow(Train_Split)), size = Muestra_Size)
# Y definimos los nuevos data frame:
Mi.Train <- Train_Split[Indice, ]
Mi.Test <- Train_Split[-Indice, ]
1410/7049
#Todas_Imagenes <- readRDS("DATA/Imagenes.saved")
Todas_Imagenes <- readRDS("DATA/Imagenes.saved")
NumeroImagen <- 180
# la vemos  en blanco y negro
image(1:96,1:96,Todas_Imagenes[[NumeroImagen]],col=gray((0:255)/255))
# Podemos ahora marcar los puntos de esta imagen con un bucle for:
#
#for (i in seq(from = 1, to = (ncol(Train)-2) ,by =2)){
#  points(96-Train[1,i],96-Train[1,i+1], col = "green", pch = 19)
#}
#
# O bien con las funciones apply aplicadas a los indices:
indice <- seq(from = 1, to = (ncol(Train)-2) ,by =2)
lapply(indice, function(x,y) points(96-y[NumeroImagen,x],96-y[NumeroImagen,x+1], col = "blue", pch = 19), y=Train )
image(1:96,1:96,Todas_Imagenes[[NumeroImagen]],col=gray((0:255)/255))
colnames(Train)
lapply(1:nrow(Train),function(x,y)points(96-y[x,1],96-y[x,2]), col = "red", pch=19),y=Train)
lapply(1:nrow(Train),function(x,y) points(96-y[x,1],96-y[x,2], col = "red", pch=19),y=Train)
colnames(True)
which.min(Train$left_eye_center_y)
Train$left_eye_center_y[6783]
NumeroImagen <- 6783
image(1:96,1:96,Todas_Imagenes[[NumeroImagen]],col=gray((0:255)/255))
# Podemos ahora marcar los puntos de esta imagen con un bucle for:
#
#for (i in seq(from = 1, to = (ncol(Train)-2) ,by =2)){
#  points(96-Train[1,i],96-Train[1,i+1], col = "green", pch = 19)
#}
#
# O bien con las funciones apply aplicadas a los indices:
indice <- seq(from = 1, to = (ncol(Train)-2) ,by =2)
lapply(indice, function(x,y) points(96-y[NumeroImagen,x],96-y[NumeroImagen,x+1], col = "blue", pch = 19), y=Train )
Train$left_eye_center_y[6783]
Train$left_eye_center_x[6783]
which.min(Train$left_eye_center_x)
image(1:96,1:96,Todas_Imagenes[[1908]],col=gray((0:255)/255))
indice <- seq(from = 1, to = (ncol(Train)-2) ,by =2)
lapply(indice, function(x,y) points(96-y[1908,x], 96-y[1908,x+1],col="blue",pch=19), y=Train)
NumeroImagen <- 1906
# la vemos  en blanco y negro
image(1:96,1:96,Todas_Imagenes[[NumeroImagen]],col=gray((0:255)/255))
indice <- seq(from = 1, to = (ncol(Train)-2) ,by =2)
lapply(indice, function(x,y) points(96-y[NumeroImagen,x],96-y[NumeroImagen,x+1], col = "blue", pch = 19), y=Train )
Train$left_eye_center_x[1906]
Train$left_eye_center_y[1906]
lapply(1:nrow(Train),function(x,y) points(96-y[x,1],96-y[x,2], col = "red", pch=19),y=Train)
which.min(Train$left_eye_center_y)
Train$left_eye_center_x[6783]
96-Train$left_eye_center_x[6783]
96-Train$left_eye_center_y[6783]
hist[Train$left_eye_center_x]
?hist
hist(Train$left_eye_center_x)
hist(Train$left_eye_center_y)
Todas_Imagenes[1]
str(Todas_Imagenes)
image(Todas_Imagenes[[1]])
?include
parche <- Todas_Imagenes[[1]][1:40,1:40]
image(parche)
X_Origen <- 1
Y_Origen <- 1
X_Delta <- 95
Y_Delta <- 95
# Seleccionamos una imagen de las 7049 imagenes totales
Seleccion_Imagen <- 1
# Seleccionamos el parche
parche <- Todas_Imagenes[[Seleccion_Imagen]][X_Origen:(X_Origen+X_Delta),Y_Origen:(Y_Origen+Y_Delta)]
image(X_Origen:(X_Origen+X_Delta),Y_Origen:(Y_Origen+Y_Delta),parche,col=gray((0:255)/255))
hist(Train$left_eye_center_x)
hist(96-Train$left_eye_center_x)
hist(96-Train$left_eye_center_x, break=10)
hist(96-Train$left_eye_center_x, breaks=10)
hist(96-Train$left_eye_center_y, breaks=10)
X_Origen <- 15
Y_Origen <- 45
X_Delta <- 30
Y_Delta <- 30
# Seleccionamos una imagen de las 7049 imagenes totales
Seleccion_Imagen <- 1
parche <- Todas_Imagenes[[Seleccion_Imagen]][X_Origen:(X_Origen+X_Delta),Y_Origen:(Y_Origen+Y_Delta)]
# Podemos ver el parche con:
image(X_Origen:(X_Origen+X_Delta),Y_Origen:(Y_Origen+Y_Delta),parche,col=gray((0:255)/255))
parche
parche[30,55]
parche[30-15,55-45]
parche[25-15,55-45]
hist(parche)
View(parche)
?matrix
tmp <- matrix(rep(1,15),nrow=5,ncol=3)
image(tmp)
tmp
tmp[3,2] <-127
tmp
image(tmp)
tmp[3,2] <-255
image(tmp)
image(1:3,1:5,tmp,col=gray((0:255)/255))
image(tmp,col=gray((0:255)/255))
tmp[3,2] <-127
image(tmp,col=gray((0:255)/255))
tmp[3,2] <-10
tmp
image(tmp,col=gray((0:255)/255))
tmp[3,2] <-1
image(tmp,col=gray((0:255)/255))
tmp[3,2] <-127
image(tmp,col=gray((0:255)/255))
